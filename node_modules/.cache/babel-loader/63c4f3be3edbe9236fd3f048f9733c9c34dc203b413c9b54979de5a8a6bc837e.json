{"ast":null,"code":"var _jsxFileName = \"/Users/victorsu/repos/simple-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [city, setCity] = useState(\"College Park\");\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"changeCity called\");\n    setCity(event.target.location.value);\n    console.log(\"city is \" + city);\n  }\n  async function getInfo(name) {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${name}&APPID=94ed81b061343f42225830b57876c92c`, {\n        mode: \"cors\"\n      });\n      const location = await response.json();\n      return location;\n    } catch (err) {\n      console.log(err);\n      return err;\n    }\n  }\n  async function getLocationTemp(location) {\n    getInfo(location).then(response => {\n      console.log(response);\n    });\n  }\n  useEffect(() => {\n    getInfo(city);\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"location\",\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"location\",\n          name: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EvdJxmCdUPs+GY19fMX8f6DxOGM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","city","setCity","handleSubmit","event","preventDefault","console","log","target","location","value","getInfo","name","response","fetch","mode","json","err","getLocationTemp","then"],"sources":["/Users/victorsu/repos/simple-weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  let [city, setCity] = useState(\"College Park\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"changeCity called\");\n    setCity(event.target.location.value);\n    console.log(\"city is \" + city);\n  }\n\n  async function getInfo(name) {\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${name}&APPID=94ed81b061343f42225830b57876c92c`,\n        { mode: \"cors\" },\n      );\n      const location = await response.json();\n      return location;\n    } catch (err) {\n      console.log(err);\n      return err;\n    }\n  }\n\n  async function getLocationTemp(location) {\n    getInfo(location).then((response) => {\n      console.log(response);\n    });\n  }\n\n  useEffect(() => {\n    getInfo(city);\n  }, [city])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <form action=\"\" onSubmit={handleSubmit}>\n          <label htmlFor=\"location\">Location:</label>\n          <input type=\"text\" id=\"location\" name=\"location\"></input>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,GAAG,GAAG;EAAA;EACb,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,cAAc,CAAC;EAE9C,SAASK,YAAY,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCL,OAAO,CAACE,KAAK,CAACI,MAAM,CAACC,QAAQ,CAACC,KAAK,CAAC;IACpCJ,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGN,IAAI,CAAC;EAChC;EAEA,eAAeU,OAAO,CAACC,IAAI,EAAE;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,qDAAoDF,IAAK,yCAAwC,EAClG;QAAEG,IAAI,EAAE;MAAO,CAAC,CACjB;MACD,MAAMN,QAAQ,GAAG,MAAMI,QAAQ,CAACG,IAAI,EAAE;MACtC,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;MAChB,OAAOA,GAAG;IACZ;EACF;EAEA,eAAeC,eAAe,CAACT,QAAQ,EAAE;IACvCE,OAAO,CAACF,QAAQ,CAAC,CAACU,IAAI,CAAEN,QAAQ,IAAK;MACnCP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;EAEAd,SAAS,CAAC,MAAM;IACdY,OAAO,CAACV,IAAI,CAAC;EACf,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAA,uBACE;QAAM,MAAM,EAAC,EAAE;QAAC,QAAQ,EAAEE,YAAa;QAAA,wBACrC;UAAO,OAAO,EAAC,UAAU;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3C;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,UAAU;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAS,eACzD;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA7CQH,GAAG;AAAA,KAAHA,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}