{"ast":null,"code":"var _jsxFileName = \"/Users/victorsu/repos/simple-weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CurrentInfo from \"./components/CurrentInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\nfunction App() {\n  _s();\n  let [city, setCity] = useState(\"College Park\");\n  let [cityInfo, setCityInfo] = useState({});\n  let [isLoading, setLoading] = useState(true);\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"changeCity called\");\n    setCity(event.target.location.value);\n    console.log(\"city is \" + city);\n  }\n  useEffect(() => {\n    // runs when city state changes\n    async function fetchLocationData(location) {\n      getInfo(location).then(response => {\n        console.log(response);\n        setCityInfo(response);\n        setLoading(false);\n      });\n    }\n    async function getInfo(name) {\n      try {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${name}&APPID=94ed81b061343f42225830b57876c92c`, {\n          mode: \"cors\"\n        });\n        const location = await response.json();\n        return location;\n      } catch (err) {\n        console.log(err);\n        return err;\n      }\n    }\n    console.log(\"user effect called\");\n    fetchLocationData(city);\n  }, [city]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"location\",\n          name: \"location\",\n          placeholder: \"Search City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [console.log(\"ab to render current info\"), console.log(\"Please.....\" + cityInfo), /*#__PURE__*/_jsxDEV(CurrentInfo, {\n        city: cityInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O9hRferv3kcHOBg8PQOJcAzAjNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CurrentInfo","apiKey","process","env","REACT_APP_API_KEY","App","city","setCity","cityInfo","setCityInfo","isLoading","setLoading","handleSubmit","event","preventDefault","console","log","target","location","value","fetchLocationData","getInfo","then","response","name","fetch","mode","json","err"],"sources":["/Users/victorsu/repos/simple-weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CurrentInfo from \"./components/CurrentInfo\";\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nfunction App() {\n  let [city, setCity] = useState(\"College Park\");\n  let [cityInfo, setCityInfo] = useState({});\n  let [isLoading, setLoading] = useState(true);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"changeCity called\");\n    setCity(event.target.location.value);\n    console.log(\"city is \" + city);\n  }\n\n  useEffect(() => { // runs when city state changes\n    async function fetchLocationData(location) {\n      getInfo(location).then((response) => {\n        console.log(response);\n        setCityInfo(response);\n        setLoading(false);\n      });\n    }\n    async function getInfo(name) {\n      try {\n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?q=${name}&APPID=94ed81b061343f42225830b57876c92c`,\n          { mode: \"cors\" }\n        );\n        const location = await response.json();\n        return location;\n      } catch (err) {\n        console.log(err);\n        return err;\n      }\n    }\n    console.log(\"user effect called\");\n    fetchLocationData(city);\n  }, [city]);\n\n  if (isLoading) {\n    return <div className=\"App\">Loading...</div>;\n  }\n  return <div className=\"App\">Loading...</div>;\n  return (\n    <div className=\"App\">\n      <header>\n        <form action=\"\" onSubmit={handleSubmit}>\n          <input type=\"text\" id=\"location\" name=\"location\" placeholder=\"Search City\"></input>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </header>\n      <main>\n        {console.log(\"ab to render current info\")}\n        {console.log(\"Please.....\" + cityInfo)}\n        <CurrentInfo city={cityInfo}></CurrentInfo>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}