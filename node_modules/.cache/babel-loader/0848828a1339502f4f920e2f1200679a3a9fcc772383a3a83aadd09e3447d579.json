{"ast":null,"code":"var _jsxFileName = \"/Users/victorsu/repos/simple-weather-app/src/components/Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast(props) {\n  _s();\n  const [forecastData, setForecastData] = useState({});\n  const apiKey = process.env.REACT_APP_API_KEY;\n  function kelvinToFarenheit(k) {\n    return ((k - 273.15) * (9 / 5) + 32).toFixed(2);\n  }\n  function kelvinToCelsius(k) {\n    return (k - 273.15).toFixed(2);\n  }\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${props.cityName}&appid=${apiKey}&cnt=5`).then(res => res.json()).then(data => setForecastData(data)).catch(e => {\n      console.log(e);\n    });\n    console.log(forecastData);\n  }, [props.cityName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: forecastData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), forecastData.list.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"experience\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"YES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, e.dt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 47\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Forecast, \"nw7oX8H28Nv+OhIr5g/CMoRgY/w=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","useEffect","Forecast","props","forecastData","setForecastData","apiKey","process","env","REACT_APP_API_KEY","kelvinToFarenheit","k","toFixed","kelvinToCelsius","fetch","cityName","then","res","json","data","catch","e","console","log","list","map","i","dt"],"sources":["/Users/victorsu/repos/simple-weather-app/src/components/Forecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Forecast(props) {\n  const [forecastData, setForecastData] = useState({});\n\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  \n\n  function kelvinToFarenheit(k) {\n    return ((k - 273.15) * (9 / 5) + 32).toFixed(2);\n  }\n\n  function kelvinToCelsius(k) {\n    return (k - 273.15).toFixed(2);\n  }\n\n  useEffect(() => {\n    (fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${props.cityName}&appid=${apiKey}&cnt=5`\n      )\n        .then((res) => res.json())\n        .then((data) => setForecastData(data))).catch(e => {\n            console.log(e);\n        });\n    console.log(forecastData);\n  }, [props.cityName]);\n\n  \n\n  return (\n    <div className=\"forecast\">{forecastData ? <div>\n        <p>yes</p>\n        \n        {forecastData.list.map((e, i) => {\n          return (\n          <div key={e.dt} className=\"experience\">\n            <p>YES</p>\n          </div>\n          );\n        })}\n\n    </div> : <p>Loading</p>}</div>\n  );\n}\n\nexport default Forecast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAMM,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAI5C,SAASC,iBAAiB,CAACC,CAAC,EAAE;IAC5B,OAAO,CAAC,CAACA,CAAC,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC;EACjD;EAEA,SAASC,eAAe,CAACF,CAAC,EAAE;IAC1B,OAAO,CAACA,CAAC,GAAG,MAAM,EAAEC,OAAO,CAAC,CAAC,CAAC;EAChC;EAEAX,SAAS,CAAC,MAAM;IACba,KAAK,CACD,sDAAqDX,KAAK,CAACY,QAAS,UAAST,MAAO,QAAO,CAC7F,CACEU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKd,eAAe,CAACc,IAAI,CAAC,CAAC,CAAEC,KAAK,CAACC,CAAC,IAAI;MAC/CC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAClB,CAAC,CAAC;IACNC,OAAO,CAACC,GAAG,CAACnB,YAAY,CAAC;EAC3B,CAAC,EAAE,CAACD,KAAK,CAACY,QAAQ,CAAC,CAAC;EAIpB,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,UAAEX,YAAY,gBAAG;MAAA,wBACtC;QAAA,UAAG;MAAG;QAAA;QAAA;QAAA;MAAA,QAAI,EAETA,YAAY,CAACoB,IAAI,CAACC,GAAG,CAAC,CAACJ,CAAC,EAAEK,CAAC,KAAK;QAC/B,oBACA;UAAgB,SAAS,EAAC,YAAY;UAAA,uBACpC;YAAA,UAAG;UAAG;YAAA;YAAA;YAAA;UAAA;QAAI,GADFL,CAAC,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QAER;MAER,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEA,gBAAG;MAAA,UAAG;IAAO;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAO;AAElC;AAAC,GA1CQzB,QAAQ;AAAA,KAARA,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}