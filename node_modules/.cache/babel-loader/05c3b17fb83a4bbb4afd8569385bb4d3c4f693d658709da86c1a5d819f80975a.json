{"ast":null,"code":"var _jsxFileName = \"/Users/victorsu/repos/simple-weather-app/src/components/Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast(props) {\n  _s();\n  const [forecastData, setForecastData] = useState({});\n  const apiKey = process.env.REACT_APP_API_KEY;\n  function kelvinToFarenheit(k) {\n    return ((k - 273.15) * (9 / 5) + 32).toFixed(2);\n  }\n  function kelvinToCelsius(k) {\n    return (k - 273.15).toFixed(2);\n  }\n  console.log(\"This is forecast data\");\n  fetch(`api.openweathermap.org/data/2.5/forecast?lat=${\"252\"}&lon=${props.geodata[0].lon}&appid=${apiKey}`).then(res => res.json()).then(data => setForecastData(data));\n  console.log(forecastData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(Forecast, \"lxz2qd1XrScTAD5gWsYhndcg2gU=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","useEffect","Forecast","props","forecastData","setForecastData","apiKey","process","env","REACT_APP_API_KEY","kelvinToFarenheit","k","toFixed","kelvinToCelsius","console","log","fetch","geodata","lon","then","res","json","data"],"sources":["/Users/victorsu/repos/simple-weather-app/src/components/Forecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Forecast(props) {\n  const [forecastData, setForecastData] = useState({});\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  function kelvinToFarenheit(k) {\n    return ((k - 273.15) * (9 / 5) + 32).toFixed(2);\n  }\n\n  function kelvinToCelsius(k) {\n    return (k - 273.15).toFixed(2);\n  }\n  \n  \n  console.log(\"This is forecast data\")\n  fetch(\n    `api.openweathermap.org/data/2.5/forecast?lat=${\"252\"}&lon=${\n      props.geodata[0].lon\n    }&appid=${apiKey}`\n  )\n    .then((res) => res.json())\n    .then((data) => setForecastData(data));\n\n  console.log(forecastData);\n\n  return <div className=\"forecast\"></div>;\n}\n\nexport default Forecast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMM,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAE5C,SAASC,iBAAiB,CAACC,CAAC,EAAE;IAC5B,OAAO,CAAC,CAACA,CAAC,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC;EACjD;EAEA,SAASC,eAAe,CAACF,CAAC,EAAE;IAC1B,OAAO,CAACA,CAAC,GAAG,MAAM,EAAEC,OAAO,CAAC,CAAC,CAAC;EAChC;EAGAE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCC,KAAK,CACF,gDAA+C,KAAM,QACpDb,KAAK,CAACc,OAAO,CAAC,CAAC,CAAC,CAACC,GAClB,UAASZ,MAAO,EAAC,CACnB,CACEa,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKjB,eAAe,CAACiB,IAAI,CAAC,CAAC;EAExCR,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;EAEzB,oBAAO;IAAK,SAAS,EAAC;EAAU;IAAA;IAAA;IAAA;EAAA,QAAO;AACzC;AAAC,GAzBQF,QAAQ;AAAA,KAARA,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}