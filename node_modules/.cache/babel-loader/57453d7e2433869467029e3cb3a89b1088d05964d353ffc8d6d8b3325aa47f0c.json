{"ast":null,"code":"var _jsxFileName = \"/Users/victorsu/repos/simple-weather-app/src/components/Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast(props) {\n  _s();\n  const [forecastData, setForecastData] = useState({});\n  const apiKey = process.env.REACT_APP_API_KEY;\n  function kelvinToFarenheit(k) {\n    return ((k - 273.15) * (9 / 5) + 32).toFixed(2);\n  }\n  ;\n  function kelvinToCelsius(k) {\n    return (k - 273.15).toFixed(2);\n  }\n  useEffect(() => {\n    fetch(`api.openweathermap.org/data/2.5/forecast?lat=${props.geodata[0].lat}&lon=${props.geodata[0].lon}&appid=${apiKey}`).then(res => res.json()).then(data => setForecastData(data));\n  }, [props.geodata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: console.log(props.geodata)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Forecast, \"nw7oX8H28Nv+OhIr5g/CMoRgY/w=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","useEffect","Forecast","props","forecastData","setForecastData","apiKey","process","env","REACT_APP_API_KEY","kelvinToFarenheit","k","toFixed","kelvinToCelsius","fetch","geodata","lat","lon","then","res","json","data","console","log"],"sources":["/Users/victorsu/repos/simple-weather-app/src/components/Forecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Forecast(props) {\n    const [forecastData, setForecastData] = useState({});\n    const apiKey = process.env.REACT_APP_API_KEY;\n  \n  function kelvinToFarenheit(k) {\n    return ( (k - 273.15) * (9/5) + 32 ).toFixed(2);\n  };\n\n  function kelvinToCelsius(k) {\n    return (k - 273.15).toFixed(2);\n  }\n\n  useEffect(() => {\n    fetch(\n      `api.openweathermap.org/data/2.5/forecast?lat=${props.geodata[0].lat}&lon=${props.geodata[0].lon}&appid=${apiKey}`\n    )\n      .then((res) => res.json())\n      .then((data) => setForecastData(data));\n\n    \n  }, [props.geodata]);\n  \n\n  return (\n    <div className=\"forecast\">\n        {console.log(props.geodata)}\n    </div>\n  );\n}\n\nexport default Forecast;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMM,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAE9C,SAASC,iBAAiB,CAACC,CAAC,EAAE;IAC5B,OAAO,CAAE,CAACA,CAAC,GAAG,MAAM,KAAK,CAAC,GAAC,CAAC,CAAC,GAAG,EAAE,EAAGC,OAAO,CAAC,CAAC,CAAC;EACjD;EAAC;EAED,SAASC,eAAe,CAACF,CAAC,EAAE;IAC1B,OAAO,CAACA,CAAC,GAAG,MAAM,EAAEC,OAAO,CAAC,CAAC,CAAC;EAChC;EAEAX,SAAS,CAAC,MAAM;IACda,KAAK,CACF,gDAA+CX,KAAK,CAACY,OAAO,CAAC,CAAC,CAAC,CAACC,GAAI,QAAOb,KAAK,CAACY,OAAO,CAAC,CAAC,CAAC,CAACE,GAAI,UAASX,MAAO,EAAC,CACnH,CACEY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKhB,eAAe,CAACgB,IAAI,CAAC,CAAC;EAG1C,CAAC,EAAE,CAAClB,KAAK,CAACY,OAAO,CAAC,CAAC;EAGnB,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,UACpBO,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACY,OAAO;EAAC;IAAA;IAAA;IAAA;EAAA,QACzB;AAEV;AAAC,GA5BQb,QAAQ;AAAA,KAARA,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}